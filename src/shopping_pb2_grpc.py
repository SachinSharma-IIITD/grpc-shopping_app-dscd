# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import shopping_pb2 as shopping__pb2


class ShoppingAppStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.checkConnection = channel.unary_unary(
                '/shopping.ShoppingApp/checkConnection',
                request_serializer=shopping__pb2.PingReq.SerializeToString,
                response_deserializer=shopping__pb2.Response.FromString,
                )
        self.regSeller = channel.unary_unary(
                '/shopping.ShoppingApp/regSeller',
                request_serializer=shopping__pb2.Seller.SerializeToString,
                response_deserializer=shopping__pb2.Response.FromString,
                )
        self.sellProduct = channel.unary_unary(
                '/shopping.ShoppingApp/sellProduct',
                request_serializer=shopping__pb2.Product.SerializeToString,
                response_deserializer=shopping__pb2.RegProductResponse.FromString,
                )
        self.updateProduct = channel.unary_unary(
                '/shopping.ShoppingApp/updateProduct',
                request_serializer=shopping__pb2.UpdateProductReq.SerializeToString,
                response_deserializer=shopping__pb2.Response.FromString,
                )
        self.deleteProduct = channel.unary_unary(
                '/shopping.ShoppingApp/deleteProduct',
                request_serializer=shopping__pb2.DeleteProductReq.SerializeToString,
                response_deserializer=shopping__pb2.Response.FromString,
                )
        self.showProducts = channel.unary_stream(
                '/shopping.ShoppingApp/showProducts',
                request_serializer=shopping__pb2.ShowProductReq.SerializeToString,
                response_deserializer=shopping__pb2.Product.FromString,
                )
        self.regBuyer = channel.unary_unary(
                '/shopping.ShoppingApp/regBuyer',
                request_serializer=shopping__pb2.Buyer.SerializeToString,
                response_deserializer=shopping__pb2.Response.FromString,
                )
        self.browseProducts = channel.unary_stream(
                '/shopping.ShoppingApp/browseProducts',
                request_serializer=shopping__pb2.BrowseProductsReq.SerializeToString,
                response_deserializer=shopping__pb2.ProductForDisplay.FromString,
                )
        self.buyProduct = channel.unary_unary(
                '/shopping.ShoppingApp/buyProduct',
                request_serializer=shopping__pb2.BuyProductReq.SerializeToString,
                response_deserializer=shopping__pb2.Response.FromString,
                )
        self.addToWishlist = channel.unary_unary(
                '/shopping.ShoppingApp/addToWishlist',
                request_serializer=shopping__pb2.WishlistReq.SerializeToString,
                response_deserializer=shopping__pb2.Response.FromString,
                )
        self.viewWishlist = channel.unary_stream(
                '/shopping.ShoppingApp/viewWishlist',
                request_serializer=shopping__pb2.ViewWishlistReq.SerializeToString,
                response_deserializer=shopping__pb2.ProductForDisplay.FromString,
                )
        self.rateProduct = channel.unary_unary(
                '/shopping.ShoppingApp/rateProduct',
                request_serializer=shopping__pb2.RateProductReq.SerializeToString,
                response_deserializer=shopping__pb2.Response.FromString,
                )


class ShoppingAppServicer(object):
    """Missing associated documentation comment in .proto file."""

    def checkConnection(self, request, context):
        """Common functions
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def regSeller(self, request, context):
        """Seller functions
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def sellProduct(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def updateProduct(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def deleteProduct(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def showProducts(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def regBuyer(self, request, context):
        """Buyer functions
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def browseProducts(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def buyProduct(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def addToWishlist(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def viewWishlist(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def rateProduct(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ShoppingAppServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'checkConnection': grpc.unary_unary_rpc_method_handler(
                    servicer.checkConnection,
                    request_deserializer=shopping__pb2.PingReq.FromString,
                    response_serializer=shopping__pb2.Response.SerializeToString,
            ),
            'regSeller': grpc.unary_unary_rpc_method_handler(
                    servicer.regSeller,
                    request_deserializer=shopping__pb2.Seller.FromString,
                    response_serializer=shopping__pb2.Response.SerializeToString,
            ),
            'sellProduct': grpc.unary_unary_rpc_method_handler(
                    servicer.sellProduct,
                    request_deserializer=shopping__pb2.Product.FromString,
                    response_serializer=shopping__pb2.RegProductResponse.SerializeToString,
            ),
            'updateProduct': grpc.unary_unary_rpc_method_handler(
                    servicer.updateProduct,
                    request_deserializer=shopping__pb2.UpdateProductReq.FromString,
                    response_serializer=shopping__pb2.Response.SerializeToString,
            ),
            'deleteProduct': grpc.unary_unary_rpc_method_handler(
                    servicer.deleteProduct,
                    request_deserializer=shopping__pb2.DeleteProductReq.FromString,
                    response_serializer=shopping__pb2.Response.SerializeToString,
            ),
            'showProducts': grpc.unary_stream_rpc_method_handler(
                    servicer.showProducts,
                    request_deserializer=shopping__pb2.ShowProductReq.FromString,
                    response_serializer=shopping__pb2.Product.SerializeToString,
            ),
            'regBuyer': grpc.unary_unary_rpc_method_handler(
                    servicer.regBuyer,
                    request_deserializer=shopping__pb2.Buyer.FromString,
                    response_serializer=shopping__pb2.Response.SerializeToString,
            ),
            'browseProducts': grpc.unary_stream_rpc_method_handler(
                    servicer.browseProducts,
                    request_deserializer=shopping__pb2.BrowseProductsReq.FromString,
                    response_serializer=shopping__pb2.ProductForDisplay.SerializeToString,
            ),
            'buyProduct': grpc.unary_unary_rpc_method_handler(
                    servicer.buyProduct,
                    request_deserializer=shopping__pb2.BuyProductReq.FromString,
                    response_serializer=shopping__pb2.Response.SerializeToString,
            ),
            'addToWishlist': grpc.unary_unary_rpc_method_handler(
                    servicer.addToWishlist,
                    request_deserializer=shopping__pb2.WishlistReq.FromString,
                    response_serializer=shopping__pb2.Response.SerializeToString,
            ),
            'viewWishlist': grpc.unary_stream_rpc_method_handler(
                    servicer.viewWishlist,
                    request_deserializer=shopping__pb2.ViewWishlistReq.FromString,
                    response_serializer=shopping__pb2.ProductForDisplay.SerializeToString,
            ),
            'rateProduct': grpc.unary_unary_rpc_method_handler(
                    servicer.rateProduct,
                    request_deserializer=shopping__pb2.RateProductReq.FromString,
                    response_serializer=shopping__pb2.Response.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'shopping.ShoppingApp', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ShoppingApp(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def checkConnection(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/shopping.ShoppingApp/checkConnection',
            shopping__pb2.PingReq.SerializeToString,
            shopping__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def regSeller(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/shopping.ShoppingApp/regSeller',
            shopping__pb2.Seller.SerializeToString,
            shopping__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def sellProduct(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/shopping.ShoppingApp/sellProduct',
            shopping__pb2.Product.SerializeToString,
            shopping__pb2.RegProductResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def updateProduct(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/shopping.ShoppingApp/updateProduct',
            shopping__pb2.UpdateProductReq.SerializeToString,
            shopping__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def deleteProduct(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/shopping.ShoppingApp/deleteProduct',
            shopping__pb2.DeleteProductReq.SerializeToString,
            shopping__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def showProducts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/shopping.ShoppingApp/showProducts',
            shopping__pb2.ShowProductReq.SerializeToString,
            shopping__pb2.Product.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def regBuyer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/shopping.ShoppingApp/regBuyer',
            shopping__pb2.Buyer.SerializeToString,
            shopping__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def browseProducts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/shopping.ShoppingApp/browseProducts',
            shopping__pb2.BrowseProductsReq.SerializeToString,
            shopping__pb2.ProductForDisplay.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def buyProduct(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/shopping.ShoppingApp/buyProduct',
            shopping__pb2.BuyProductReq.SerializeToString,
            shopping__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def addToWishlist(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/shopping.ShoppingApp/addToWishlist',
            shopping__pb2.WishlistReq.SerializeToString,
            shopping__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def viewWishlist(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/shopping.ShoppingApp/viewWishlist',
            shopping__pb2.ViewWishlistReq.SerializeToString,
            shopping__pb2.ProductForDisplay.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def rateProduct(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/shopping.ShoppingApp/rateProduct',
            shopping__pb2.RateProductReq.SerializeToString,
            shopping__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class BuyerNotificationStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.notifyConnection = channel.unary_unary(
                '/shopping.BuyerNotification/notifyConnection',
                request_serializer=shopping__pb2.PingReq.SerializeToString,
                response_deserializer=shopping__pb2.Response.FromString,
                )
        self.notifyProductUpdated = channel.unary_unary(
                '/shopping.BuyerNotification/notifyProductUpdated',
                request_serializer=shopping__pb2.ProductUpdatedNotif.SerializeToString,
                response_deserializer=shopping__pb2.Response.FromString,
                )


class BuyerNotificationServicer(object):
    """Missing associated documentation comment in .proto file."""

    def notifyConnection(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def notifyProductUpdated(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_BuyerNotificationServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'notifyConnection': grpc.unary_unary_rpc_method_handler(
                    servicer.notifyConnection,
                    request_deserializer=shopping__pb2.PingReq.FromString,
                    response_serializer=shopping__pb2.Response.SerializeToString,
            ),
            'notifyProductUpdated': grpc.unary_unary_rpc_method_handler(
                    servicer.notifyProductUpdated,
                    request_deserializer=shopping__pb2.ProductUpdatedNotif.FromString,
                    response_serializer=shopping__pb2.Response.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'shopping.BuyerNotification', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class BuyerNotification(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def notifyConnection(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/shopping.BuyerNotification/notifyConnection',
            shopping__pb2.PingReq.SerializeToString,
            shopping__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def notifyProductUpdated(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/shopping.BuyerNotification/notifyProductUpdated',
            shopping__pb2.ProductUpdatedNotif.SerializeToString,
            shopping__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class SellerNotificationStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.notifyConnection = channel.unary_unary(
                '/shopping.SellerNotification/notifyConnection',
                request_serializer=shopping__pb2.PingReq.SerializeToString,
                response_deserializer=shopping__pb2.Response.FromString,
                )
        self.notifyProductBought = channel.unary_unary(
                '/shopping.SellerNotification/notifyProductBought',
                request_serializer=shopping__pb2.ProductBoughtNotif.SerializeToString,
                response_deserializer=shopping__pb2.Response.FromString,
                )


class SellerNotificationServicer(object):
    """Missing associated documentation comment in .proto file."""

    def notifyConnection(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def notifyProductBought(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SellerNotificationServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'notifyConnection': grpc.unary_unary_rpc_method_handler(
                    servicer.notifyConnection,
                    request_deserializer=shopping__pb2.PingReq.FromString,
                    response_serializer=shopping__pb2.Response.SerializeToString,
            ),
            'notifyProductBought': grpc.unary_unary_rpc_method_handler(
                    servicer.notifyProductBought,
                    request_deserializer=shopping__pb2.ProductBoughtNotif.FromString,
                    response_serializer=shopping__pb2.Response.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'shopping.SellerNotification', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SellerNotification(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def notifyConnection(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/shopping.SellerNotification/notifyConnection',
            shopping__pb2.PingReq.SerializeToString,
            shopping__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def notifyProductBought(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/shopping.SellerNotification/notifyProductBought',
            shopping__pb2.ProductBoughtNotif.SerializeToString,
            shopping__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
